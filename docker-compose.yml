services:
  app:
    build: .
    ports:
      - "8080:8080"
    environment:
      - DD_AGENT_HOST=datadog-agent
      - DD_TRACE_AGENT_PORT=8126
      - DD_LOGS_INJECTION=true
      - DD_TRACE_SAMPLE_RATE=1.0
      - DD_SERVICE=java-check-404
      - DD_ENV=development
      - DD_VERSION=1.0.0
      - DD_TRACE_STATUS404RULE_ENABLED=${DD_TRACE_STATUS404RULE_ENABLED:-true}
    depends_on:
      - datadog-agent
    networks:
      - app-network
    restart: unless-stopped

  datadog-agent:
    image: gcr.io/datadoghq/agent:latest
    environment:
      - DD_API_KEY=${DD_API_KEY:-your-datadog-api-key}
      - DD_APM_ENABLED=true
      - DD_APM_NON_LOCAL_TRAFFIC=true
      - DD_LOGS_ENABLED=true
      - DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL=true
      - DD_CONTAINER_EXCLUDE="name:datadog-agent"
      - DD_COLLECT_KUBERNETES_EVENTS=false
      - DD_LEADER_ELECTION=false
      - DD_PROCESS_AGENT_ENABLED=false
      - DD_HOSTNAME=java-check-404-host
      - DD_SITE=datadoghq.com
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    ports:
      - "8126:8126"  # APM
      - "8125:8125/udp"  # StatsD
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    driver: bridge 